/** @page DMA_WFI Use DMA transfer interrupt to wake up CPU from WFI low power mode. 

  @verbatim
  ******************** (C)COPYRIGHT 2011 STMicroelectronics *******************
  * @file    DMA/DMA_WFI/readme.txt 
  * @author  MCD Application Team
  * @version V1.5.0
  * @date    13-May-2011
  * @brief   Description of the DMA WFI example.
  ******************************************************************************
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  ******************************************************************************
   @endverbatim

  @par Example description

  This example provides a short description of how to use the DMA peripheral
  in circular mode to transfer data from USART peripheral to RAM memory. 
  When the user sends a character using USART, this character will be 
  transferred using DMA to a specific RAM buffer and a DMA interrupt is 
  generated by USART_RX.
  After configuring the DMA channel to transfer data (4 bytes   from USART data 
  register to a RAM buffer, the MCU enters to the WFI mode.
  While waiting the “DMA Transfer complete” event, the MCU is in WFI mode.
  As soon as the “DMA Transfer complete” event occurs, the MCU returns to run 
  mode, executes a specific action (activate/deactivate Leds   depending to the 
  Data in the RAM buffer and return to the WFI mode (by software  . 
  Since the DMA channel is configured in circular mode, the same procedure will 
  be repeated infinitely.
  Writing "led1" on HyperTerminal, will turn on LED1 and all the other leds will 
  be turned off.
  Writing "led2" on HyperTerminal, will turn on LED2 and all the other leds will 
  be turned off.
  Writing "led3" on HyperTerminal, will turn on LED3 and all the other leds will 
  be turned off.
  Writing "led4" on HyperTerminal, will turn on LED4 and all the other leds will 
  be turned off.
  Writing anything else than "led1", "led2", "led3" or "led4", will turn on all 
  leds.
    
  @par Directory contents

  - DMA/DMA_WFI/main.c            Main file containing the "main" function
  - DMA/DMA_WFI/stm8l15x_conf.h   Library Configuration file
  - DMA/DMA_WFI/stm8l15x_it.c     Interrupt routines source
  - DMA/DMA_WFI/stm8l15x_it.h     Interrupt routines declaration



 @par Hardware and Software environment

    - This example runs on STM8L15x High-Density, Medium-Density Plus, Medium-Density
    and Low-Density Devices.
  
  - This example has been tested with STMicroelectronics STM8L1528-EVAL 
    (STM8L15x High-Density devices) and STM8L1526-EVAL (STM8L15x Medium-Density and
    Low-Density devices) evaluation boards and can be easily tailored to any other
    development board.   

  - STM8L1526-EVAL Set-up
     - Make sure that the LCD glass daughter board is mounted in IO position.
       For more details please refer to the evaluation board user manual.
     - LED1, LED2,LED3 and LED4.
     - Connect a null-modem female/female RS232 cable between the DB9 connector 
       CN1 and PC serial port.
     - Make sure that JP5 jumper is in RS232 position

  - STM8L1528-EVAL Set-up
     - Make sure that the LCD glass daughter board is mounted in IO position.
       For more details please refer to the evaluation board user manual.
     - LED1, LED2,LED3 and LED4.
     - Connect a null-modem female/female RS232 cable between the DB9 connector 
       CN7 and PC serial port.
     - Make sure that JP5, JP11 and JP12 jumpers are in RS232 position

  - HyperTerminal configuration:
     - Word Length = 8 Bits
     - One Stop Bit
     - No parity
     - BaudRate = 9600 baud
     - flow control: None 
      

  @par How to use it ?

  In order to make the program work, you must do the following :

  - Copy all source files from this example folder to the template folder under
    Project\STM8L15x_StdPeriph_Template
  - Open your preferred toolchain 
  - Rebuild all files and load your image into target memory
  - Run the example  


 @note
  - Low-Density devices are STM8L15x microcontrollers where the Flash memory 
    density ranges between 4 and 8 Kbytes.
  - Medium-Density devices are STM8L15x microcontrollers where the 
    Flash memory density ranges between 16 and 32 Kbytes.
  - Medium density Plus devices are STM8L151R6, STM8L152R6 microcontrollers 
    where the Flash memory density is fixed and equal to 32 Kbytes and with 
    wider range of peripheral and features than the medium density devices. 
  - High-Density devices are STM8L15x microcontrollers where the 
    Flash memory density is 64 Kbytes and with the same peripheral set than 
    Medium Density Plus devices.
*/

/******************* (C) COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/